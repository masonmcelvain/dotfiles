[[language]]
name = "php"
language-servers = ["psalm", "intelephense"]
auto-format = false
indent = { tab-width = 3, unit = "   " }

[[language]]
name = "sql"
auto-format = false
indent = { tab-width = 3, unit = "   " }

# https://github.com/helix-editor/helix/wiki/External-formatter-configuration#prettier
[[language]]
name = "html"
language-servers = ["vscode-html-language-server", "tailwindcss-ls"]
formatter = { command = 'bash', args = [
  "-c",
  "pnpm run --silent biome --stdin-file-path=file.html || npx prettier --config .prettierrc --parser typescript",
] }
auto-format = false

[[language]]
name = "json"
formatter = { command = 'bash', args = [
  "-c",
  "pnpm run --silent biome --stdin-file-path=file.json || npx prettier --config .prettierrc --parser typescript",
] }
auto-format = false

[[language]]
name = "css"
language-servers = ["vscode-css-language-server", "tailwindcss-ls"]
formatter = { command = 'bash', args = [
  "-c",
  "pnpm run --silent biome --stdin-file-path=file.css || npx prettier --config .prettierrc --parser typescript",
] }
auto-format = false

[[language]]
name = "javascript"
language-servers = ["typescript-language-server", "eslint", "tailwindcss-ls"]
formatter = { command = 'bash', args = [
  "-c",
  "pnpm run --silent biome --stdin-file-path=file.js || npx prettier --config .prettierrc --parser typescript",
] }
auto-format = false
indent = { tab-width = 3, unit = "   " }

[[language]]
name = "jsx"
language-servers = ["typescript-language-server", "eslint", "tailwindcss-ls"]
formatter = { command = 'bash', args = [
  "-c",
  "pnpm run --silent biome --stdin-file-path=file.jsx || npx prettier --config .prettierrc --parser typescript",
] }
auto-format = false
indent = { tab-width = 3, unit = "   " }

[[language]]
name = "liquid"
language-id = "html"
scope = "text.html.basic"
roots = [".theme-check.yml"]
file-types = ["liquid"]
language-servers = ["liquid"]
auto-format = false
indent = { tab-width = 2, unit = "  " }

[[language]]
name = "typescript"
language-servers = ["typescript-language-server", "eslint", "tailwindcss-ls"]
formatter = { command = 'bash', args = [
  "-c",
  "pnpm run --silent biome --stdin-file-path=file.ts || npx prettier --config .prettierrc --parser typescript",
] }
auto-format = false
indent = { tab-width = 3, unit = "   " }

[[language]]
name = "tsx"
language-servers = ["typescript-language-server", "eslint", "tailwindcss-ls"]
formatter = { command = 'bash', args = [
  "-c",
  "pnpm run --silent biome --stdin-file-path=file.tsx || npx prettier --config .prettierrc --parser typescript",
] }
auto-format = false
indent = { tab-width = 3, unit = "   " }

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
auto-format = false

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

# https://github.com/helix-editor/helix/issues/3231
[language-server.eslint.config]
validate = "on"
experimental = { useFlatConfig = false }
rulesCustomizations = []
run = "onType"
problems = { shortenToSingleLine = false }
nodePath = ""

[language-server.tailwindcss-ls]
command = "tailwindcss-language-server"
args = ["--stdio"]
[language-server.tailwindcss-ls.config.tailwindCSS]
classFunctions = ["tw", "clsx", "cn", "tw\\.[a-z-]+"]
[language-server.tailwindcss-ls.config.tailwindCSS.experimental.configFile]
"packages/shared/ui/src/styles/globals.css" = ["apps/nextjs/**", "packages/shared/ui/**"]

[language-server.liquid]
command = "shopify"
args = ["theme", "language-server"]
timeout = 5

[language-server.intelephense]
command = "intelephense"
args = ["--stdio"]
[language-server.intelephense.config]
licenceKey = "/home/mmcelvain/intelephense/licence.txt"
# https://github.com/bmewburn/intelephense-docs/blob/master/installation.md
[language-server.intelephense.config.intelephense]
environment = { shortOpenTag = true }
[language-server.intelephense.config.intelephense.diagnostics]
implementationErrors = false
typeErrors = false
undefinedFunctions = false
undefinedMethods = false
undefinedTypes = false
undefinedVariables = false

[language-server.psalm]
command = "vendor/bin/psalm-language-server"
timeout = 120

[language-server.rust-analyzer.config.check]
command = "clippy"
